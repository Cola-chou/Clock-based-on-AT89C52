C51 COMPILER V9.60.0.0   MAIN                                                              10/15/2022 15:14:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          
   3          #include "reg52.h"       //此文件中定义了单片机的一些特殊功能寄存器
   4          #define KEY P1
   5          typedef unsigned int u16;   //对数据类型进行声明定义
   6          typedef unsigned char u8;
   7          
   8          sbit LSA=P2^2; // 138译码器输入引脚
   9          sbit LSB=P2^3;
  10          sbit LSC=P2^4;
  11          sbit BEEP=P3^7; // 蜂鸣器引脚
  12          
  13          u8 code smgduan[17]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  14                    0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};// 共阴数码管显示0~F的值
  15          u8 keyvalue; // 矩阵键盘值
  16          char ssec,sec,min,hour; // 毫秒，秒，分
  17          u8 DisplayData[8];  // 数码管段选显示数组
  18          
  19                    
  20          // 非精确延时函数 1ms         
  21          void delay(u16 i)
  22          {
  23   1        while(i--); 
  24   1      }
  25          
  26          // 中断初始化函数
  27          void InterruptInit()
  28          {
  29   1        TMOD=0X01; // 选择为定时器0模式，工作方式1，仅用TR0打开启动。
  30   1        TH0=0Xd8;  // 给定时器赋初值，定时10ms
  31   1        TL0=0Xf0; 
  32   1      
  33   1        TR0=1; // 打开定时器  
  34   1        ET0=1; // 打开定时器0中断允许
  35   1        EA=1; // 打开总中断
  36   1        EX0=1; // 打开外部中断0
  37   1        EX1=1; // 打开外部中断1
  38   1        
  39   1        IT0=1; // 外部中断0,1负跳变触发
  40   1        IT1=1;
  41   1        PX0=1; //设置中断优先等级:外部中断优于内部中断
  42   1        PX1=1; 
  43   1      }
  44          
  45          
  46          // 数码管显示函数
  47          void DigDisplay()
  48          {
  49   1        u8 i;
  50   1        for(i=0;i<8;i++)
  51   1        {
  52   2          switch(i)  // 位选，选择点亮的数码管，
  53   2          {
  54   3            case(0):
C51 COMPILER V9.60.0.0   MAIN                                                              10/15/2022 15:14:06 PAGE 2   

  55   3              LSA=1;LSB=1;LSC=1; break; // 显示第7位
  56   3            case(1):
  57   3              LSA=0;LSB=1;LSC=1; break; // 显示第6位
  58   3            case(2):
  59   3              LSA=1;LSB=0;LSC=1; break; // 显示第5位
  60   3            case(3):
  61   3              LSA=0;LSB=0;LSC=1; break; // 显示第4位
  62   3            case(4):
  63   3              LSA=1;LSB=1;LSC=0; break; // 显示第3位 
  64   3            case(5):
  65   3              LSA=0;LSB=1;LSC=0; break; // 显示第2位 
  66   3            case(6):
  67   3              LSA=1;LSB=0;LSC=0; break; // 显示第1位 
  68   3            case(7):
  69   3              LSA=0;LSB=0;LSC=0; break; // 显示第0位  
  70   3          }
  71   2          P0=DisplayData[i]; // 发送段码
  72   2          delay(100); // 间隔一段时间扫描 
  73   2          P0=0x00; // 消隐
  74   2        }
  75   1      }
  76          
  77          // 数码管段选赋值函数
  78          void datapros()
  79          {
  80   1        DisplayData[7]=0x00;  // 正常工作状态前两位不显示
  81   1        DisplayData[6]=0x00;  
  82   1        DisplayData[5]=smgduan[hour/10];  // 小时十位数值
  83   1        DisplayData[4]=smgduan[hour%10] + 0x80; // 小时个位数值 , 加0x80 显示小数点
  84   1        DisplayData[3]=smgduan[min/10];   // 分钟十位数值
  85   1        DisplayData[2]=smgduan[min%10] + 0x80; // 分钟个位数值，同样加小数点隔开
  86   1        DisplayData[1]=smgduan[sec/10]; // 秒十位值
  87   1        DisplayData[0]=smgduan[sec%10];  // 秒个位
  88   1      }
  89          
  90          // 时间溢出处理函数
  91          void updateTime()
  92          {
  93   1        keyvalue=0x00; // 矩阵按键值，初始为0x00
  94   1        if(sec>=60)
  95   1        {
  96   2          sec=0;
  97   2        }
  98   1        if(sec<0)
  99   1        {
 100   2          sec=59;
 101   2        }
 102   1        if(min>=60)
 103   1        {
 104   2          min=0;
 105   2        }
 106   1        if(min<0)
 107   1        {
 108   2          min=59;
 109   2        }
 110   1        if(hour>=24)
 111   1        {
 112   2          hour=0;
 113   2        }
 114   1        if(hour<0)
 115   1        {
 116   2          hour=23;
C51 COMPILER V9.60.0.0   MAIN                                                              10/15/2022 15:14:06 PAGE 3   

 117   2        }
 118   1      }
 119          
 120          // 矩阵按键检测 + 时间调整函数
 121          void changeDataPros()
 122          {
 123   1        KEY = 0x0f; // 扫描列
 124   1        if(KEY!=0x0f)
 125   1        {
 126   2          delay(10);
 127   2          if(KEY!=0x0f) // 消抖流程
 128   2          {
 129   3            KEY = 0x0f; 
 130   3            switch(KEY)
 131   3            {
 132   4              case (0x07):
 133   4                keyvalue = 0x07;                                                                 
 134   4                break;
 135   4              case (0x0b):
 136   4                keyvalue = 0x0b;
 137   4                break;
 138   4              case (0x0d):
 139   4                keyvalue = 0x0d;
 140   4                break;
 141   4              case (0x0e):
 142   4                keyvalue = 0x0e;
 143   4                break;
 144   4            }
 145   3            KEY = 0xf0;  // 扫描行
 146   3            switch(KEY)
 147   3            {
 148   4              case (0x70):
 149   4                keyvalue = keyvalue + 0x70;
 150   4                break;
 151   4              case (0xb0):
 152   4                keyvalue = keyvalue + 0xb0;
 153   4                break;
 154   4              case (0xd0):
 155   4                keyvalue = keyvalue + 0xd0;
 156   4                break;
 157   4              case (0xe0):
 158   4                keyvalue = keyvalue + 0xe0;
 159   4                break;
 160   4            }
 161   3          }
 162   2            while(KEY!=0xf0);
 163   2        }
 164   1        switch (keyvalue)
 165   1        {
 166   2          case(0x77): // 第1列第1行 小时加1
 167   2            hour++; 
 168   2            updateTime();
 169   2            break;
 170   2          case(0xb7): // 第1列第2行 小时减1
 171   2            hour--;
 172   2            updateTime();
 173   2            break;
 174   2          case(0xd7): // 第1列第3行 小时加10
 175   2            hour+=10;
 176   2            updateTime(); 
 177   2            break;
 178   2          case(0xe7): // 第1列第4行 小时减10
C51 COMPILER V9.60.0.0   MAIN                                                              10/15/2022 15:14:06 PAGE 4   

 179   2            hour-=10;
 180   2            updateTime();
 181   2            break;
 182   2          
 183   2          case(0x7b): // 第2列第1行 分钟加1
 184   2            min++;
 185   2            updateTime();
 186   2            break;
 187   2          case(0xbb): // 第2列第2行 分钟减1
 188   2            min--;
 189   2            updateTime();
 190   2            break;
 191   2          case(0xdb): // 第2列第3行 分钟加10
 192   2            min+=10;
 193   2            updateTime();
 194   2            break;
 195   2          case(0xeb): // 第2列4行 分钟减10
 196   2            min-=10;
 197   2            updateTime();
 198   2            break;
 199   2          
 200   2          case(0x7d): // 第3列第1行 秒钟加1
 201   2            sec++;
 202   2            updateTime();
 203   2            break;
 204   2          case(0xbd): // 第3列第2行 秒钟减1
 205   2            sec--;
 206   2            updateTime();
 207   2            break;
 208   2          case(0xdd): // 第3列第3行 秒钟加10
 209   2            sec+=10;
 210   2            updateTime();
 211   2            break;
 212   2          case(0xed): // 第3列第4行 秒钟减10
 213   2            sec-=10;
 214   2            updateTime();
 215   2            break;
 216   2          
 217   2          case(0xee):
 218   2            keyvalue=0xff; // 调时模式结束标志
 219   2            break;
 220   2        }
 221   1        DisplayData[7]=0x40;  // 调时模式前两位提示符 -- 
 222   1        DisplayData[6]=0x40;  
 223   1        DisplayData[5]=smgduan[hour/10];  
 224   1        DisplayData[4]=smgduan[hour%10] + 0x80;
 225   1        DisplayData[3]=smgduan[min/10];
 226   1        DisplayData[2]=smgduan[min%10] + 0x80;
 227   1        DisplayData[1]=smgduan[sec/10];
 228   1        DisplayData[0]=smgduan[sec%10];
 229   1      }
 230          
 231          // 蜂鸣器控制函数
 232          void beepTime()
 233          {
 234   1          if(hour==23&&min==59&&(sec>=50&&sec<59)&&sec%2==0) // 23使59分50秒起2秒响一次共5次
 235   1          {
 236   2            BEEP=0;
 237   2            delay(1990);
 238   2            BEEP=1;
 239   2            delay(10);
 240   2          }
C51 COMPILER V9.60.0.0   MAIN                                                              10/15/2022 15:14:06 PAGE 5   

 241   1      }
 242          
 243          // 主函数
 244          void main()
 245          { 
 246   1        InterruptInit();  //定时器0初始化
 247   1        while(1)
 248   1        {
 249   2          datapros();  // 数码管段选赋值
 250   2          DigDisplay(); // 数码管显示
 251   2        }   
 252   1      }
 253          
 254          // 外部中断0 调时中断函数
 255          void timeSet() interrupt 0
 256          {
 257   1          EX0 = 0; // 关闭外部中断0 防止嵌套
 258   1          while(1)
 259   1          {
 260   2            changeDataPros(); // 调时按键检测
 261   2            DigDisplay(); // 数码管显示
 262   2            if(keyvalue==0xff) // 退出调时函数
 263   2            {
 264   3              keyvalue=0x00;
 265   3              break;
 266   3            }
 267   2          }
 268   1          EX0 = 1;  // 开启外部中断0
 269   1      }
 270          
 271          // 外部中断1 60s倒计时中断函数
 272          void timeCD() interrupt 2
 273          {
 274   1        u8 nsec;  // 秒钟局部变量 范围0~59
 275   1          nsec=59;
 276   1          EX0 = 0;
 277   1          TH0=0Xd8; //给定时器赋初值，定时10ms 
 278   1          TL0=0Xf0; 
 279   1          while(1)
 280   1          {
 281   2            ssec++;
 282   2            delay(100);
 283   2            if(nsec==0) // 倒计时结束，退出倒计时中断
 284   2            {
 285   3              BEEP=0;
 286   3              delay(1990);
 287   3              BEEP=1;
 288   3              delay(10);
 289   3              break;
 290   3            }
 291   2            changeDataPros(); // 矩阵键盘检测
 292   2            DisplayData[7]=0x40;  // 倒计时模式：前6位提示符 ------
 293   2            DisplayData[6]=0x40;
 294   2            DisplayData[5]=0x40;  
 295   2            DisplayData[4]=0x40;  
 296   2            DisplayData[3]=0x40;  
 297   2            DisplayData[2]=0x40;  
 298   2            DisplayData[1]=smgduan[nsec/10]; // 倒计时秒数显示
 299   2            DisplayData[0]=smgduan[nsec%10];
 300   2            DigDisplay();
 301   2            if(ssec>=100)
 302   2            {
C51 COMPILER V9.60.0.0   MAIN                                                              10/15/2022 15:14:06 PAGE 6   

 303   3              ssec=0;
 304   3              nsec--;
 305   3            }
 306   2            if(keyvalue==0xff) // 按键退出倒计时中断
 307   2            {
 308   3              keyvalue=0x00;
 309   3              break;
 310   3            }
 311   2          }
 312   1          EX0 = 1;
 313   1      }
 314          
 315          // 定时器0中断函数 10ms中断一次 100次为1s
 316          void Timer0() interrupt 1
 317          {
 318   1        TH0=0Xd8; //给定时器赋初值，定时10ms 1101100011110000
 319   1        TL0=0Xf0;
 320   1        ssec++;
 321   1        if(ssec>=100)  //1s
 322   1        {
 323   2          ssec=0;
 324   2          sec++;
 325   2          beepTime();
 326   2          if(sec>=60)  // 溢出控制
 327   2          {
 328   3            sec=0;
 329   3            min++;
 330   3            if(min>=60)
 331   3            {
 332   4              min=0;
 333   4              hour++;
 334   4              if(hour>=24)
 335   4              {
 336   5                hour=0; 
 337   5              }
 338   4            }
 339   3          } 
 340   2        } 
 341   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1354    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
